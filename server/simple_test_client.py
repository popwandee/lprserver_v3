#!/usr/bin/env python3
"""
Simple Test Client for LPR WebSocket Server
‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á WebSocket Server
"""

import socketio
import time
import json
import base64
from datetime import datetime

# Create SocketIO client
sio = socketio.Client()

# Test data
test_cameras = ['CAM001', 'CAM002', 'CAM003']
test_plates = ['‡∏Å‡∏Ç1234', '‡∏Ñ‡∏á5678', '‡∏à‡∏â9012', '‡∏ä‡∏ã3456', '‡∏ç‡∏é7890']
test_locations = ['‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏´‡∏ô‡πâ‡∏≤', '‡∏õ‡∏£‡∏∞‡∏ï‡∏π‡∏´‡∏•‡∏±‡∏á', '‡∏•‡∏≤‡∏ô‡∏à‡∏≠‡∏î‡∏£‡∏ñ']

# Create a simple test image (1x1 pixel JPEG)
test_image_data = base64.b64encode(b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00H\x00H\x00\x00\xff\xdb\x00C\x00\x08\x06\x06\x07\x06\x05\x08\x07\x07\x07\t\t\x08\n\x0c\x14\r\x0c\x0b\x0b\x0c\x19\x12\x13\x0f\x14\x1d\x1a\x1f\x1e\x1d\x1a\x1c\x1c $.\' ",#\x1c\x1c(7),01444\x1f\'9=82<.342\xff\xc0\x00\x11\x08\x00\x01\x00\x01\x01\x01\x11\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x14\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x08\xff\xc4\x00\x14\x10\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00\x3f\x00\xaa\xff\xd9').decode('utf-8')

@sio.event
def connect():
    print(f"[{datetime.now().strftime('%H:%M:%S')}] ‚úÖ ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

@sio.event
def disconnect():
    print(f"[{datetime.now().strftime('%H:%M:%S')}] ‚ùå ‡∏ï‡∏±‡∏î‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠")

@sio.event
def status(data):
    print(f"[{datetime.now().strftime('%H:%M:%S')}] üìä ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {data}")

@sio.event
def lpr_response(data):
    print(f"[{datetime.now().strftime('%H:%M:%S')}] üìù ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö LPR: {data}")

@sio.event
def error(data):
    print(f"[{datetime.now().strftime('%H:%M:%S')}] ‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {data}")

@sio.event
def pong(data):
    print(f"[{datetime.now().strftime('%H:%M:%S')}] üèì ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö pong: {data}")

def send_test_data():
    """‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö LPR"""
    import random
    
    camera_id = random.choice(test_cameras)
    plate_number = random.choice(test_plates)
    confidence = round(random.uniform(60, 95), 1)
    location = random.choice(test_locations)
    
    data = {
        'camera_id': camera_id,
        'plate_number': plate_number,
        'confidence': confidence,
        'image_data': f'data:image/jpeg;base64,{test_image_data}',
        'location': location
    }
    
    print(f"[{datetime.now().strftime('%H:%M:%S')}] üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• LPR: {plate_number} ‡∏à‡∏≤‡∏Å {camera_id}")
    sio.emit('lpr_data', data)

def test_ping():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö ping"""
    print(f"[{datetime.now().strftime('%H:%M:%S')}] üèì ‡∏™‡πà‡∏á ping...")
    sio.emit('ping')

def main():
    """‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å"""
    print("=== ‡∏ó‡∏î‡∏™‡∏≠‡∏ö WebSocket Client ===")
    print("‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á ws://localhost:8765")
    
    try:
        # ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ WebSocket server
        sio.connect('http://localhost:8765')
        
        # ‡∏£‡∏≠‡∏™‡∏±‡∏Å‡∏Ñ‡∏£‡∏π‡πà
        time.sleep(1)
        
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö ping
        test_ping()
        time.sleep(1)
        
        # ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Å‡∏•‡πâ‡∏≠‡∏á
        camera_id = 'TEST_CAM'
        print(f"[{datetime.now().strftime('%H:%M:%S')}] üìπ ‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Å‡∏•‡πâ‡∏≠‡∏á: {camera_id}")
        sio.emit('camera_register', {'camera_id': camera_id})
        time.sleep(1)
        
        # ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° dashboard
        print(f"[{datetime.now().strftime('%H:%M:%S')}] üìä ‡πÄ‡∏Ç‡πâ‡∏≤‡∏£‡πà‡∏ß‡∏° dashboard...")
        sio.emit('join_dashboard')
        time.sleep(1)
        
        # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
        print("üì§ ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏ó‡∏∏‡∏Å 3 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ... (‡∏Å‡∏î Ctrl+C ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏´‡∏¢‡∏∏‡∏î)")
        
        while True:
            time.sleep(3)
            send_test_data()
            
    except KeyboardInterrupt:
        print("\nüõë ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö...")
    except Exception as e:
        print(f"‚ùå ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")
    finally:
        if sio.connected:
            sio.disconnect()
        print("‚úÖ ‡∏´‡∏¢‡∏∏‡∏î‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß")

if __name__ == '__main__':
    main()
