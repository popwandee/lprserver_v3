name: Import GitHub Issues

on:
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'Dry run mode (dont actually create issues)'
        required: false
        default: false
        type: boolean
      file_path:
        description: 'Path to issues markdown file'
        required: false
        default: '.github/ISSUES_FROM_PLAN.md'
        type: string
  push:
    branches:
      - main
    paths:
      - '.github/ISSUES_FROM_PLAN.md'
      - '.github/workflows/import-issues.yml'
  pull_request:
    branches:
      - main
    paths:
      - '.github/ISSUES_FROM_PLAN.md'
      - '.github/workflows/import-issues.yml'

jobs:
  import-issues:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pyyaml python-dotenv
          
      - name: Make scripts executable
        run: |
          chmod +x scripts/import_github_issues.py
          chmod +x scripts/setup_labels.py
        
      - name: Validate issues file
        run: |
          if [ ! -f "${{ github.event.inputs.file_path || '.github/ISSUES_FROM_PLAN.md' }}" ]; then
            echo "Error: Issues file not found"
            exit 1
          fi
          echo "Issues file found and validated"
          
      - name: Setup labels (if needed)
        run: |
          python scripts/setup_labels.py \
            --repo ${{ github.repository }} \
            --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Dry run import (always run for validation)
        run: |
          python scripts/import_github_issues.py \
            --repo ${{ github.repository }} \
            --file "${{ github.event.inputs.file_path || '.github/ISSUES_FROM_PLAN.md' }}" \
            --dry-run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Import issues (only on main branch and manual trigger)
        if: github.ref == 'refs/heads/main' && (github.event_name == 'workflow_dispatch' || github.event_name == 'push')
        run: |
          python scripts/import_github_issues.py \
            --repo ${{ github.repository }} \
            --file "${{ github.event.inputs.file_path || '.github/ISSUES_FROM_PLAN.md' }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Create summary report
        if: always()
        run: |
          echo "## Issues Import Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "- **File:** ${{ github.event.inputs.file_path || '.github/ISSUES_FROM_PLAN.md' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ github.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "⚠️ **Note:** Issues will only be created when merged to main branch" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ github.ref }}" == "refs/heads/main" ]; then
            echo "✅ **Issues imported successfully**" >> $GITHUB_STEP_SUMMARY
          else
            echo "ℹ️ **Dry run completed** - Issues not created (not on main branch)" >> $GITHUB_STEP_SUMMARY
          fi
